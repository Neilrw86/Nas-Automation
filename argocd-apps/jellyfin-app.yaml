apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: jellyfin
  namespace: argocd # Namespace where Argo CD is running
  # Optional: Add finalizer for robust cleanup
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default # Your Argo CD project name

  source:
    # URL of YOUR Git repository where this Application manifest and the helm_charts/jellyfin directory reside.
    # Argo CD will clone this repository.
    repoURL: "https://github.com/Neilrw86/Nas-Automation.git" # !!! IMPORTANT: Replace with your actual Git repo URL !!!
    # Path within your Git repository to the jellyfin wrapper chart
    path: helm_charts/jellyfin
    # Branch, tag, or commit in your Git repository to sync from
    targetRevision: HEAD # Or 'main', or a specific branch/commit

    helm:
      releaseName: jellyfin
      # valueFiles are relative to the 'path' defined above (helm_charts/jellyfin)
      # This tells Argo CD to use your custom values.
      valueFiles:
        - Values.yaml # This will use helm_charts/jellyfin/values.yaml from your Git repo

  destination:
    server: https://kubernetes.default.svc # Target Kubernetes cluster API
    namespace: media # Or 'default', or any namespace where you want Jellyfin deployed

  syncPolicy:
    automated: # Optional: Configure automatic synchronization
      prune: true    # Automatically delete resources that are no longer defined in Git
      selfHeal: true # Automatically sync if the live state drifts from Git
    syncOptions:
      - CreateNamespace=true # Optional: Argo CD will create the destination namespace if it doesn't exist