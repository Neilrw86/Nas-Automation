name: Helm Chart Comprehensive Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  # Job 1: Scan for secrets across the entire repo. Runs in parallel with other jobs.
  gitleaks:
    name: "Scan for secrets"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Must fetch full history for gitleaks to compare
      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2

  # Job 3: Identify which charts have changed to build a testing matrix.
  list-changed-charts:
    name: "List changed charts"
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.changes.outputs.matrix }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for tj-actions/changed-files to compare against base
      - name: Identify changed charts
        id: changes
        uses: tj-actions/changed-files@v44 # Using a slightly older but stable version
        with:
          files: helm_charts/**
          dir_names: true
          dir_names_max_depth: 2 # Ensures we get 'helm_charts/radarr', not just 'helm_charts'

  # Job 4: Run all tests on the changed charts identified in the previous job.
  test-charts:
    name: "Test Helm Chart (${{ matrix.chart }})"
    needs: list-changed-charts
    # Only run this job if the matrix from the previous job is not empty
    if: needs.list-changed-charts.outputs.matrix != '[]'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chart: ${{ fromJson(needs.list-changed-charts.outputs.matrix) }}
      fail-fast: false # Don't cancel other matrix jobs if one fails

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install testing tools
        run: |
          # Install Kubeval
          wget "https://github.com/instrumenta/kubeval/releases/download/v0.16.1/kubeval-linux-amd64.tar.gz" && tar xf kubeval-linux-amd64.tar.gz && sudo mv kubeval /usr/local/bin
          # Install Conftest
          wget "https://github.com/open-policy-agent/conftest/releases/download/v0.52.0/conftest_0.52.0_Linux_x86_64.tar.gz" && tar xzf "conftest_0.52.0_Linux_x86_64.tar.gz" && sudo mv conftest /usr/local/bin

      - name: Install Helm plugins
        run: |
          helm plugin install https://github.com/quintush/helm-unittest --version 0.4.1
          helm plugin install https://github.com/aquasecurity/helm-trivy

      - name: Lint Helm chart (helm lint)
        run: helm lint ${{ matrix.chart }}

      - name: Scan Helm chart for CVEs (helm-trivy)
        run: helm trivy ${{ matrix.chart }} --exit-code 1 --format table --ignore-unfixed --vuln-type os,library --severity CRITICAL,HIGH

      - name: Validate Helm template (kubeval)
        run: helm template ${{ matrix.chart }} | kubeval --ignore-missing-schemas --strict

      - name: Run Helm chart unit tests (helm-unittest)
        run: |
          if [ -d "${{ matrix.chart }}/tests/unit" ] || find "${{ matrix.chart }}" -name '*_test.yaml' -print -quit | grep -q .; then
            echo "--- Running unit tests for chart: ${{ matrix.chart }} ---"
            helm unittest "${{ matrix.chart }}"
          else
            echo "--- No unit tests found for chart: ${{ matrix.chart }} ---"
          fi

      - name: Test Helm template against policies (Conftest)
        run: |
          POLICY_DIR="./policy"
          if [ ! -d "$POLICY_DIR" ]; then
            echo "Policy directory $POLICY_DIR not found. Skipping Conftest tests."
            exit 0
          fi
          helm template ${{ matrix.chart }} | conftest test -p "$POLICY_DIR" -

  # Job 5: A final job to provide a clear success status for branch protection rules.
  all-tests-passed:
    name: "All Tests Passed"
    runs-on: ubuntu-latest
    needs:
      - gitleaks
      - list-changed-charts
      - test-charts
    # This 'if' condition ensures this job runs only if:
    # - All upstream jobs succeeded, OR
    # - An upstream job was skipped (like test-charts when no charts changed)
    if: ${{ always() && !contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled') }}
    steps:
      - name: Report success
        run: |
          if [[ "${{ needs.list-changed-charts.outputs.matrix }}" == "[]" ]]; then
            echo "No chart changes detected. All other checks passed."
          else
            echo "All chart tests and other checks passed successfully."
          fi