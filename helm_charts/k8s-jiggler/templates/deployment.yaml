apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "k8s-jiggler.fullname" . }}
  labels:
    {{- include "k8s-jiggler.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "k8s-jiggler.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "k8s-jiggler.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "k8s-jiggler.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: JIGGLER_NAMESPACE
              # If clusterScoped RBAC, use jiggler.namespace (empty means all namespaces for the app)
              # If namespaced RBAC, JIGGLER_NAMESPACE must be the namespace where Role is defined.
              value: {{ if .Values.rbac.clusterScoped }}{{ .Values.jiggler.namespace | quote }}{{ else }}{{ include "k8s-jiggler.rbac.namespace" . | quote }}{{ end }}
            - name: JIGGLER_INTERVAL
              value: {{ .Values.jiggler.interval | quote }}
            - name: JIGGLER_LABEL_SELECTOR
              value: {{ .Values.jiggler.labelSelector | quote }}
            - name: JIGGLER_MARK_PROCESSED
              value: {{ .Values.jiggler.markProcessed | quote }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
