apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sabnzb.fullname" . }}
  labels:
    {{- include "sabnzb.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "sabnzb.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "sabnzb.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: sabnzb
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          ports:
            - containerPort: 8080
            - containerPort: 8085
            - containerPort: 9090
            - containerPort: 9095
          volumeMounts:
            - mountPath: /config
              name: config-volume
            - mountPath: /downloads
              name: downloads-volume
            - mountPath: /incomplete-downloads
              name: incomplete-volume
            - mountPath: /movies
              name: movies-volume
            - mountPath: /tv
              name: tv-volume
            - mountPath: /books
              name: books-volume
            - mountPath: /music
              name: music-volume
          env:
            - name: PUID
              value: "{{ .Values.puid }}"
            - name: PGID
              value: "{{ .Values.pgid }}"
      volumes:
        - name: config-volume
          hostPath:
            path: {{ .Values.volumePaths.config }}
        - name: downloads-volume
          hostPath:
            path: {{ .Values.volumePaths.downloads }}
        - name: incomplete-volume
          hostPath:
            path: {{ .Values.volumePaths.incomplete }}
        - name: movies-volume
          hostPath:
            path: {{ .Values.volumePaths.movies }}
        - name: tv-volume
          hostPath:
            path: {{ .Values.volumePaths.tv }}
        - name: books-volume
          hostPath:
            path: {{ .Values.volumePaths.books }}
        - name: music-volume
          hostPath:
            path: {{ .Values.volumePaths.music }}